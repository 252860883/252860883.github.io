{"version":3,"sources":["components/headerLink.tsx","article/深入webpack4.0（二）本地服务.1.js"],"names":["Main","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","clickPosBtn","bind","title","React","Component","Template","Object","_Users_dinosaur_webtest_dinosaur_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dinosaur_webtest_dinosaur_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dinosaur_webtest_dinosaur_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id"],"mappings":"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","file":"static/js/48.3a046673.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn(idName: string) {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={this.clickPosBtn.bind(this, item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h2\",\"title\":\"webpack-dev-server \"},{\"level\":\"h2\",\"title\":\"webpack-dev-middleware\"},{\"level\":\"h2\",\"title\":\"开发环境和生产环境的构建\"},{\"level\":\"h3\",\"title\":\"webpack 3.x配置\"},{\"level\":\"h3\",\"title\":\"webpack 4.0配置\"}]\n        }\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <div>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">深入webpack4.0（二）本地服务环境</h1></div>\n<blockquote>\n  <p>在第一个章节我们已经对webpack的整体架构做了一个介绍。这一章，我们对开发环境的本地服务来展开分析。我们平时在vue-cli还是其他的脚手架也好都会启动一个本地服务来进行实时的调试，那么这个功能 webpack 是怎么来实现的呢？</p>\n</blockquote>\n\n<h2 id='webpack-dev-server '>webpack-dev-server </h2>\n\n<p>在<code>package.json</code>文件中添加如下配置,然后运行 <code>npm run start</code>就可以启动本地服务了：</p>\n\n<pre><code><span></span>\n<span>  \"scripts\": {'{'}</span>\n<span>    \"start\": \"webpack-dev-server --mode development\"</span>\n<span>  }</span>\n<span></span>\n</code></pre>\n\n<p>在 webpack 配置文件中，可以通过设置 devServer 字段来配置，比如 port 、 publicPath 等配置项。 </p>\n\n<h2 id='webpack-dev-middleware'>webpack-dev-middleware</h2>\n\n<p>其实我们在前面用到的 webpack-dev-server 用的 nodejs环境下的 express 框架来实现的。那我们是否可以自己利用 nodejs 来开发一个本地环境呢？这里就引入了我们在 nodejs 环境下的两个中间件 <code>webpack-dev-middleware</code>和 <code>webpack-hot-middleware</code>,前者是用来启动 webpack 本地服务的中间件，后者用来实现热加载。</p>\n\n<p>首先我们在 build 目录下创建一个 dev-server.js 文件，然后在<code>package.json</code>文件中添加如下配置：</p>\n\n<pre><code><span></span>\n<span>  \"scripts\": {'{'}</span>\n<span>    “dev”: \"node build/dev-server.js\"</span>\n<span>  }</span>\n<span></span>\n</code></pre>\n\n<p>然后引入<code>npm install webpack-dev-middleware webpack-hot-middleware -D</code>后开始编写文件。如果懂点 nodejs 的话，很方便就可以写出来，代码如下：</p>\n\n<pre><code><span></span>\n<span></span>\n<span>const webpack = require('webpack');</span>\n<span>const path = require(\"path\");</span>\n<span>const express = require('express');</span>\n<span></span>\n<span>const devMiddleware = require('webpack-dev-middleware');</span>\n<span>const hotMiddleware = require('webpack-hot-middleware');</span>\n<span></span>\n<span>const configFunc = require('../webpack.config')</span>\n<span>const CONFIG = configFunc()</span>\n<span>const complier = webpack(CONFIG)</span>\n<span></span>\n<span>CONFIG.mode = 'development'     //设置为开发环境</span>\n<span></span>\n<span>const app = express();</span>\n<span></span>\n<span>app.use(devMiddleware(complier, {'{'}</span>\n<span>    // 这里填写一些配置项</span>\n<span>    //  向控制台显示任何内容 </span>\n<span>    quiet: true,</span>\n<span>    //  绑定中间件的公共路径 </span>\n<span>    //  使用与webpack相同 </span>\n<span>    publicPath: CONFIG.output.publicPath,</span>\n<span></span>\n<span>}))</span>\n<span>// 热加载</span>\n<span>app.use(hotMiddleware(complier))</span>\n<span>app.listen(8085, () =&gt; console.log('8085 is running'))</span>\n<span></span>\n<span></span>\n</code></pre>\n\n<h2 id='开发环境和生产环境的构建'>开发环境和生产环境的构建</h2>\n\n<h3 id='webpack 3.x配置'>webpack 3.x配置</h3>\n\n<p>在 webpack 3.x 中，我们通常通过 <code>process.env.NODE_ENV</code> 区分两种环境。在<code>package.json</code>文件中添加如下配置,</p>\n\n<pre><code><span></span>\n<span>\"scripts\": {'{'}</span>\n<span>    \"build\": \"NODE_ENV=production webpack\",</span>\n<span>    \"develop\": \"NODE_ENV=development webpack-dev-server\"</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p>然后引入 DefinePlugin 插件进行全局变量的写入：</p>\n\n<pre><code><span></span>\n<span>plugins: [</span>\n<span>    new webpack.DefinePlugin({'{'}</span>\n<span>      // webpack 3.x 的 process.env.NODE_ENV 是通过手动在命令行中指定 NODE_ENV=... 的方式来传递的</span>\n<span>      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),</span>\n<span>    }),</span>\n<span>]</span>\n<span></span>\n</code></pre>\n\n<h3 id='webpack 4.0配置'>webpack 4.0配置</h3>\n\n<p>webpack 4.x 版本引入了 mode 的概念，在运行 webpack 时需要指定使用 production 或 development 两个 mode 其中一个。配置指令如下：</p>\n\n<pre><code><span></span>\n<span>\"scripts\": {'{'}</span>\n<span>    \"build\": \"webpack --mode production\",</span>\n<span>    \"start\": \"webpack-dev-server --mode development\",</span>\n<span>}</span>\n<span></span>\n</code></pre>\n\n<p><strong>production mode</strong> 时，默认会启用各种性能优化的功能，包括构建结果优化以及 webpack 运行性能优化。<br></br>- 生产环境可能需要分离 CSS 成单独的文件，以便多个页面共享同一个 CSS 文件<br></br>- 生产环境需要压缩 HTML/CSS/JS 代码<br></br>- 生产环境需要压缩图片</p>\n\n<p><strong>development mode</strong> 时，会开启 debug 工具，运行时打印详细的错误信息，以及更加快速的增量编译构建。<br></br>- 开发环境需要生成 sourcemap 文件<br></br>- 开发环境需要打印 debug 信息<br></br>- 开发环境需要 live reload 或者 hot reload 的功能</p>\n\n<p>同时，在webpack配置时我们需要将mode参数暴露出去，可以通过函数形式进行传递，如下代码示例：</p>\n\n<pre><code><span></span>\n<span>module.exports = (env, argv) =&gt; ({'{'}</span>\n<span>return{'{'}</span>\n<span>    mode:argv.mode</span>\n<span>    // ... 其他配置</span>\n<span>  })</span>\n<span></span>\n</code></pre>\n</div>\n            </div>\n\n        )\n    }\n}"],"sourceRoot":""}