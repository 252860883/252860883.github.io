{"version":3,"sources":["components/headerLink.tsx","article/CSS之BFC IFC.js"],"names":["Main","clickPosBtn","idName","dom","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","headerLink","map","item","index","level","key","onClick","title","React","Component","Template","_this","Object","_Users_dinosaur_webtest_dinosaur_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dinosaur_webtest_dinosaur_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dinosaur_webtest_dinosaur_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5__","_components_headerLink__WEBPACK_IMPORTED_MODULE_7__","id","target","href"],"mappings":"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","file":"static/js/0.a64f69d2.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/components/headerLink.scss\"\nexport default class Main extends React.Component<any, any>{\n    componentDidMount() { }\n\n    clickPosBtn = (idName: string) => {\n        const dom: any = document.getElementById(idName);\n        window.scrollTo({\n            top: dom.offsetTop - 10,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"headerLink\">\n                <div className=\"content\">\n                    <div className=\"real-content\">\n                        <div className='tag'>Reading Assistance ·</div>\n                        {\n                            this.props.headerLink.map((item: any, index: number) => {\n                                return <span className={'a' + item.level} key={index} onClick={() => this.clickPosBtn(item.title)}>{item.title}</span>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Fragment } from 'react'\nimport '../style/main.scss'\nimport HeaderLink from \"../components/headerLink\"\nexport default class Template extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            headerLink: [{\"level\":\"h2\",\"title\":\"BFC\"},{\"level\":\"h2\",\"title\":\"IFC\"},{\"level\":\"h2\",\"title\":\"GFC\"},{\"level\":\"h2\",\"title\":\"FFC\"}]\n        }\n    }\n    componentWillMount(){\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n            <Fragment>\n                <HeaderLink headerLink={this.state.headerLink}></HeaderLink>\n                <div className=\"article\">\n<div className=\"title-content\"><h1 className=\"title\">BFC、IFC、FFC、GFC</h1></div>\n<blockquote>\n  <p>看到标题有些恍惚，怎么这么多 FC ？是的，我在一次面试的笔试题中看到这多 FC的时候，也有些懵逼了，甚至有点想想吃 KFC 哈哈。可能平时大家最熟悉的是 BFC ，其他的这些牛鬼蛇神都是什么，我们这篇文章就来探讨探讨。</p>\n</blockquote>\n\n<h2 id='BFC'>BFC</h2>\n\n<p>我们先来会会老大哥 <code>BFC</code>块格式化上下文（Block Formatting Context，BFC）,简单来说就是CSS渲染布局中的一部分，块盒子所在的区域。</p>\n\n<p>1.创建 BFC 方式（常用）：</p>\n\n<ul>\n<li>根元素(<code>&lt;html&gt;</code>)</li>\n<li>浮动元素（元素的 float 不是 none）</li>\n<li>绝对定位元素（元素的 position 为 absolute 或 fixed）</li>\n<li>display 为 inline-block、table相关值、flex、grid 等</li>\n<li>overflow 值不为 visible 的块元素</li>\n<li>contain 值为 layout、content或 paint 的元素</li>\n</ul>\n\n<p>2.BFC 特点：</p>\n\n<ul>\n<li>同一个 BFC 内的两个相邻元素会发生 margin 坍塌，两个 BFC 之间则不会发生坍塌</li>\n<li>BFC 区域不会与浮动元素重叠</li>\n<li>BFC 会包含区域内的浮动元素高度</li>\n<li>BFC 在文档流中是一个独立的容器，内外元素不会影响</li>\n</ul>\n\n<p>3.BFC 主要应用场景</p>\n\n<ul>\n<li>清除浮动（因为BFC区域计算浮动元素高度）</li>\n<li>避免 margin 坍塌（因为两个BFC之间不存在margin）</li>\n</ul>\n\n<blockquote>\n  <p>科普：margin 坍塌（外边距重叠），当块级元素上边距和下边距同时都有设定时只会保留最大的边距。有三种情况会发生外边距重叠：同一层相邻元素之间、没有内容将父元素和后代元素分开（如没有boder、padding、BFC或清除浮动时）、空的块级元素。</p>\n</blockquote>\n\n<h2 id='IFC'>IFC</h2>\n\n<p><code>IFC</code>内联格式化上下文(Inline formatting context)</p>\n\n<p>IFC 特点：</p>\n\n<ul>\n<li>元素会在行内从左到右进行排列</li>\n<li>所有元素会在区域内形成一个线框</li>\n<li>高度由其包含的行内元素最高的来计算</li>\n<li>区域内的浮动元素不在行框中并且会压缩行框宽度</li>\n<li>行框宽度容不下元素时会另起一个行框并继续进行排列、</li>\n<li>行框元素遵循<code>text-align</code>和<code>vertical-align</code></li>\n</ul>\n\n<p>IFC 应用：</p>\n\n<ul>\n<li>常用于 水平/垂直居中</li>\n</ul>\n\n<h2 id='GFC'>GFC</h2>\n\n<p><code>GFC</code> 网格布局格式化上下文(GridLayout Formatting Contexts),通常通过设置<code>display:grid；</code>来实现一个GFC区域，可以在该区域内定义行和列。和 table 相比，有更多的属性来控制行行为。</p>\n\n<h2 id='FFC'>FFC</h2>\n\n<p><code>FFC</code> 自适应格式化上下文(Flex Formatting Contexts),通过设置<code>display:flex;</code>或者<code>display:inline-flex</code>来生成。其实也就是我们常说的 flex布局，这个就不用多说了。</p>\n\n<blockquote>\n  <p>参考：<br></br><a target=\"_blank\" href=\"https://juejin.im/entry/5938daf7a0bb9f006b2295db\">小科普：到底什么是 BFC、IFC、GFC 和 FFC</a><br></br><a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Inline_formatting_context\">Inline formatting context</a><br></br><a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context\">Block formatting context</a></p>\n</blockquote>\n</div>\n            </Fragment>\n        )\n    }\n}"],"sourceRoot":""}